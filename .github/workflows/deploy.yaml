name: Deploy master branch

on:
  push:
    branches:
      - 'dev'
      - 'master'
  workflow_dispatch:
    inputs:
      stage:
        description: Deployment stage
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - master

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install turbo
      run: npm install -g turbo
    - name: Prune api project with turbo
      run: npx turbo prune fictadvisor-api
    - name: Cache Yarn
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          .yarn/cache
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: |
        corepack enable
        yarn set version stable
        yarn workspaces focus --all
      working-directory: './out'
    - name: Generate Prisma
      run: npx prisma generate --schema ./admission-api/prisma/schema.prisma
      working-directory: './out'
    - name: Build api with turbo
      run: npx turbo run build --filter fictadvisor-api
      working-directory: './out'
    - name: Install production dependencies
      run: yarn workspaces focus --all --production
    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: -c "cp ./serverless.yaml ./out/serverless.yaml && cd ./out && serverless deploy --stage ${{ inputs.stage || github.ref_name }}"
        entrypoint: /bin/sh
      env:
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}