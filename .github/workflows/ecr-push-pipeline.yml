name: PushECR Backend

on: ["push"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node and dependencies
        uses: ./.github/actions/install

      - name: Run tests
        run: npx turbo test:unit
        
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install Node and dependencies
        uses: ./.github/actions/install

      - name: Start PostgreSQL Database
        run: |
          docker-compose -f fictadvisor-api/docker-compose.yml up -d && sleep 5s

      - name: Start migration
        run: npx turbo test:migrate

      - name: Start seeding
        run: npx turbo test:seed

      - name: Run integration tests
        run: npx turbo test:integration

  build:
    needs: [test, integration-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REPOSITORY_URL: ${{ secrets.AWS_URI }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REPOSITORY_URL:$IMAGE_TAG .
          docker push $REPOSITORY_URL:$IMAGE_TAG
